<?xml version="1.0" encoding="utf-8" ?>
<project name="PostgreSql.Data.PostgreSqlClient" default="build-all">
	<!-- Project properties -->
	<property 
        name="project.name" 
        value="PostgreSqlClient"
    />
	<property 
        name="project.version" 
        value="2.0 Beta 1"
    />
	<property 
        name="project.release.type" 
        value="beta1" 
        overwrite="false" 
    />
	<!-- nightly / dev / alpha / beta# / rc# / release -->

	<!-- Default Configuration -->

	<property 
        name="project.config" 
        value="debug"
    />
	<property 
        name="build.debug"  
        value="true"
    />
	<property 
        name="build.defines" 
        value=""
    />

	<!-- Platform specific properties. These are the defaults -->
	<property 
        name="current.build.defines" 
        value="${build.defines}" 
    />
	<property 
        name="current.build.task" 
        value="build" 
    />
	<property 
        name="current.build.help.task" 
        value="build-help" 
    />

	<!-- Paths properties -->
	<property 
        name="source.dir" value="../../source" 
    />

	<!-- Check for Html Help Compiler -->
	<target 
        name="check-htmlhelp-compiler" 
        description="Checks existance of the HTML help compiler">

		<if test="${property::exists('htmlhelp.compiler')}">
			<readregistry 
                property="htmlhelp.workshop.installroot" 
                key="SOFTWARE\Microsoft\HTML Help Workshop\InstallDir"
				hive="CurrentUser" 
                failonerror="false" 
            />

			<if test="${property::exists('htmlhelp.workshop.installroot')}">
				<property 
                    name="htmlhelp.compiler" 
                    value="${htmlhelp.workshop.installroot}\hhc.exe" 
                    readonly="false" 
                />
			</if>
		</if>
		<if test="${not property::exists('htmlhelp.compiler')}">
			<sysinfo />
			<property 
                name="htmlhelp.compiler" 
                value="${sys.os.folder.programfiles}\HTML Help Workshop\hhc.exe"
				readonly="false" 
            />
		</if>
	</target>

	<!-- Check for NUnit -->
	<target 
        name="check-nunit-framework" 
        depends="check-htmlhelp-compiler" 
        description="Checks existance of NUnit2">

		<if test="${not property::exists('nunit.framework.dll')}">
			<sysinfo />
            <sysinfo />
            <property 
                name="nunit.framework.dll"
				value="${sys.os.folder.programfiles}\NUnit-Net-2.0 2.2.7\bin\nunit.framework.dll"
				readonly="false"
			/>
		</if>
	</target>

	<!-- Target for check build configuration -->
	<target 
        name="check-build-config" 
        depends="check-nunit-framework" 
        description="Pre-build configuration checks">

		<!-- Copy snk file -->
		<copy 
            file="${source.dir}/PostgreSql/Data/PostgreSql.Data.PostgreSqlClient.snk" 
            todir="." 
        />
	</target>

	<!-- named project configurations (used by self-test and self-doc tasks) -->
	<target name="debug" description="Perform a 'debug' build">
		<property name="project.config" value="debug" />
		<property name="build.debug" value="true" />
		<property 
            name="build.dir" 
            value="${nant.settings.currentframework}/bin/${project.config}" />
	</target>

	<target name="release" description="Perform a 'release' build">
		<property name="project.config" value="release" />
		<property name="build.debug" value="false" />
		<property 
            name="build.dir" 
            value="${nant.settings.currentframework}/bin/${project.config}" />
	</target>

	<!-- Build target for all existing platforms -->
	<target 
        name="build-all" 
        depends="check-build-config"
        description="Builds the provider for all available framework versions">

		<if test="${framework::exists('net-2.0')}">
			<call target="set-net-2.0-framework-configuration"/>
			<call target="build" />
		</if>
	</target>

	<target 
        name="set-net-2.0-framework-configuration" 
        description="Configures the build for MS.NET Framework 2.0">

		<property 
            name="nant.settings.currentframework" 
            value="net-2.0" 
        />
		<property 
            name="current.build.defines" 
            value="${build.defines}NET,NET_2_0" 
            dynamic="true" 
        />
		<property 
            name="link.sdkdoc.version" 
            value="SDK_v1_1" 
        />
		<property 
            name="link.sdkdoc.web" 
            value="true" 
        />
	</target>

	<!-- Build target for all existing platforms -->
	<target name="build">
		<echo message="Using '${framework::get-target-framework()}' framework on '${platform::get-name()}' platform." />

		<call target="${project.config}" />

		<!-- Clean actual build directory -->
		<delete 
            dir="${build.dir}" 
            failonerror="false" 
        />

		<!-- Create actual build directory -->
		<mkdir dir="${build.dir}" />

		<csc 
            target="library" 
            output="${build.dir}/${nant.project.name}.dll"
            debug="${build.debug}" 
            define="${current.build.defines}">

			<sources basedir="${source.dir}">
				<include name="PostgreSql/**/*.cs"/>
			</sources>

			<references>
				<include name="System.dll"/>
				<include name="System.Data.dll"/>
				<include name="System.Drawing.dll"/>
				<include name="System.XML.dll"/>
				<include name="System.Windows.Forms.dll"/>
			</references>

			<arg value="/resource:${source.dir}/PostgreSql/Data/Resources/ToolBox/PgConnection.bmp,PostgreSql.Data.Resources.ToolBox.PgConnection.bmp"/>
            <arg value="/resource:${source.dir}/PostgreSql/Data/Resources/ToolBox/PgCommand.bmp,PostgreSql.Data.Resources.ToolBox.PgCommand.bmp"/>
            <arg value="/resource:${source.dir}/PostgreSql/Data/Resources/ToolBox/PgDataAdapter.bmp,PostgreSql.Data.Resources.ToolBox.PgDataAdapter.bmp"/>
			<arg value="/optimize+" />
		</csc>

		<call target="build-tests" failonerror="true" />
		<if test="${property::exists('run.tests')}">
			<call target="run-tests" failonerror="true" />
		</if>
	</target>

	<target 
        name="build-tests" 
        description="Builds the NUnit test suite assembly">

		<!-- Set build directory -->
		<property 
            name="build.dir" 
            value="${nant.settings.currentframework}/bin/${project.config}" 
        />

		<!-- Copy config file to build dir -->
		<copy 
            file="${source.dir}/UnitTests/App.config" 
            tofile="${build.dir}/${nant.project.name}.UnitTest.dll.config" 
        />

		<copy 
            file="${nunit.framework.dll}" 
            todir="${build.dir}"
        />

		<!-- compile FirebirdSql.Data.Firebird.UnitTest -->
		<csc 
            target="library" 
            output="${build.dir}/${nant.project.name}.UnitTest.dll" 
            debug="${build.debug}" 
            define="${current.build.defines}">

			<sources basedir="${source.dir}">
				<include name="UnitTests/**/*.cs"/>
			</sources>

			<references>
				<include name="System.dll" />
				<include name="System.Data.dll" />
				<include name="System.XML.dll" />
				<include name="${nunit.framework.dll}"/>
				<include name="${build.dir}/PostgreSql.Data.PostgreSqlClient.dll" />
			</references>

			<arg value="/optimize+" />
		</csc>
	</target>
</project>